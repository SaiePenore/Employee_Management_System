package Admin;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class Splash extends JFrame implements ActionListener {

	Splash() {
		
		// Prepare the image path. Adjust this path as per your image location.
        String imagePath = "C:/Users/saiep/eclipse-workspace/Employee Management System/src/icons/Front1.jpg"; // Replace with your image path

        // Load the image from the specified path or resource
        ImageIcon imageIcon = new ImageIcon(imagePath);

        // Create a JFrame to display the image
        JFrame frame = new JFrame("Image Display Example");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(1200, 600); // Set the window size
        
        JLabel heading = new JLabel("EMPLOYEE MANAGEMENT SYSTEM");
        heading.setBounds(130, 50, 1200, 60);
		heading.setFont(new Font("serif", Font.PLAIN, 60));
		heading.setForeground(Color.white);
        frame.add(heading);
        

        // Create a JLabel and set the image to display
        Image i1 = imageIcon.getImage().getScaledInstance(1200, 600, Image.SCALE_DEFAULT);
        ImageIcon i2 = new ImageIcon(i1);
        JLabel imageLabel = new JLabel(i2);
        imageLabel.setBounds(50, 100, 1050 , 500);

        // Create a JButton to accesss another page
        
        JButton clickHere = new JButton("CLICK HERE TO CONTINUE");
        clickHere.setBounds(450, 200, 300, 70);
        clickHere.addActionListener(this);;
        imageLabel.add(clickHere);
        
        // Add the imageLabel to the frame's content pane
        frame.getContentPane().add(imageLabel);

        // Center the frame on the screen
        frame.setLocationRelativeTo(null);

        // Make the frame visible
        frame.setVisible(true);
		
		
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		
		setVisible(false);
		new Login();
		
	}
	
	public static void main(String[] args) {
		new Splash();

	}

	

}



package Admin;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;

import javax.swing.*;

public class Login{
	
	public static void main(String[] args)
	{
		SwingUtilities.invokeLater(() -> loginPage());
	
	}
	
	private static void loginPage() {

        // Create a JFrame for login page
        JFrame frame = new JFrame("LOGIN PAGE");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 300); // Set the window size
        
        // creating a JLabel for username and a text field
        JLabel lblUsername = new JLabel("Username");
		lblUsername.setBounds(40, 20, 100, 30);
		//lblUsername.setSize(100,40);
		frame.add(lblUsername);
		
		JTextField tfUser = new JTextField();
		tfUser.setBounds(150, 20, 150, 30);
		frame.add(tfUser);
		
		//creating a JLabel for password and a text field
		JLabel lblPassword = new JLabel("Password");
		lblPassword.setBounds(40, 70, 100, 30);
		frame.add(lblPassword);
		
		JTextField tfPassword = new JTextField();
		tfPassword.setBounds(150, 70, 150, 30);
		frame.add(tfPassword);
		
		// Creating a JButton for login
		JButton login = new JButton("LOGIN");
		login.setBounds(150, 140, 150, 30);
		login.setBackground(Color.black);
		login.setForeground(Color.white);
		frame.add(login);
		
		// Prepare the image path. Adjust this path as per your image location.
        String imagePath = "C:/Users/saiep/eclipse-workspace/Employee Management System/src/icons/man.png"; // Replace with your image path

        // Load the image from the specified path or resource
        ImageIcon imageIcon = new ImageIcon(imagePath);
        
        // Create a JLabel and set the image to display
        Image i1 = imageIcon.getImage().getScaledInstance(200, 200, Image.SCALE_DEFAULT);
        ImageIcon i2 = new ImageIcon(i1);
        JLabel imageLabel = new JLabel(i2);
        imageLabel.setBounds(350, 0, 200 , 200);
        //frame.add(imageLabel);
        
        // Add the imageLabel to the frame's content pane
        frame.getContentPane().add(imageLabel);

        // Center the frame on the screen
        frame.setLocationRelativeTo(null);

        // Make the frame visible
        frame.setVisible(true);
    }
	
}

